options:
  control-network:
    type: string
    description: |
      The IP address and netmask of the control network (e.g. 192.168.0.0/24).
      This network will be used for Contrail endpoints.
      If not specified, default network will be used.
  log-level:
    type: string
    default: SYS_NOTICE
    description: |
      Log level for contrail services. Valid values are:
      SYS_EMERG, SYS_ALERT, SYS_CRIT, SYS_ERR, SYS_WARN, SYS_NOTICE, SYS_INFO, SYS_DEBUG
  docker-registry:
    type: string
    default: opencontrailnightly
    description: |
      URL of docker-registry
  docker-registry-insecure:
    type: boolean
    default: false
    description: |
      Is it docker-registry insecure and should docker be configured for it
  docker-user:
    type: string
    description: |
      Login to the docker registry.
  docker-password:
    type: string
    description: |
      Password to the docker registry.
  image-tag:
    type: string
    default: latest
    description: |
      Tag of docker image.
  http_proxy:
    type: string
    default: ""
    description: |
      URL to use for HTTP_PROXY to be used by Docker. Only useful in closed
      environments where a proxy is the only option for routing to the
      registry to pull images
  https_proxy:
    type: string
    default: ""
    description: |
      URL to use for HTTPS_PROXY to be used by Docker. Only useful in closed
      environments where a proxy is the only option for routing to the
      registry to pull images
  no_proxy:
    type: string
    default: ""
    description: |
      Comma-separated list of destinations (either domain names or IP
      addresses) that should be directly accessed, by opposition of going
      through the proxy defined above. Must be less than 2023 characters long
  nagios_context:
    default: "juju"
    type: string
    description: |
      Used by the nrpe subordinate charms.
      A string that will be prepended to instance name to set the host name
      in nagios. So for instance the hostname would be something like juju-myservice-0
      If you're running multiple environments with the same services in them
      this allows you to differentiate between them.
  nagios_servicegroups:
    default: ""
    type: string
    description: |
      A comma-separated list of nagios servicegroups.
      If left empty, the nagios_context will be used as the servicegroup