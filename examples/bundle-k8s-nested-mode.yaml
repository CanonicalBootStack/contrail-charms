# OpenStack Contrail must be configured for nested mode!
#
# The following link-local services should be created:
#
#   LL Service Name    Service IP   Service Port   Fabric IP   Fabric Port
#   ----------------   ----------   ------------   ---------   -----------
#   K8s-cni-to-agent   10.10.10.5   9091           127.0.0.1   9091
#
# NOTE: Here 10.10.10.5 is the Service IP that was chosen by user. This can be any unused IP in the cluster

series: bionic
services:

# contrail-kubernetes

  contrail-kubernetes-master:
    charm: cs:~juniper-os-software/contrail-kubernetes-master
    series: bionic
    options:
      nested_mode: true
      cluster_project: "{'domain':'default-domain','project':'admin'}"
      cluster_network: "{'domain':'default-domain','project':'admin','name':'juju-net'}"
      service_subnets: '10.96.0.0/12'
      nested_mode_config: |
        {
        "CONTROLLER_NODES": "10.0.12.20",
        "KEYSTONE_AUTH_ADMIN_TENANT": "admin",
        "KEYSTONE_AUTH_ADMIN_USER": "admin",
        "KEYSTONE_AUTH_ADMIN_PASSWORD": "password",
        "KEYSTONE_AUTH_URL_VERSION": "/v2.0",
        "KEYSTONE_AUTH_HOST": "10.0.12.122",
        "KEYSTONE_AUTH_PROTO": "http",
        "KEYSTONE_AUTH_PUBLIC_PORT":"5000",
        "KEYSTONE_AUTH_REGION_NAME": "RegionOne",
        "KEYSTONE_AUTH_INSECURE": "True",
        "KUBERNESTES_NESTED_VROUTER_VIP": "10.10.10.5"
        }

  contrail-kubernetes-node:
    charm: cs:~juniper-os-software/contrail-kubernetes-node
    series: bionic


# kubernetes

  easyrsa:
    charm: cs:~containers/easyrsa
    num_units: 1
    to:
    - '1'

  etcd:
    charm: cs:~containers/etcd
    num_units: 1
    options:
      channel: 3.2/stable
    to:
    - '0'

  kubernetes-master:
    charm: cs:~containers/kubernetes-master-696
    expose: true
    num_units: 1
    options:
      channel: 1.14/stable
      service-cidr: '10.96.0.0/12'
      docker_runtime: 'custom'
      docker_runtime_repo: 'deb [arch={ARCH}] https://download.docker.com/linux/ubuntu {CODE} stable'
      docker_runtime_key_url: 'https://download.docker.com/linux/ubuntu/gpg'
      docker_runtime_package: 'docker-ce'
    to:
    - '0'

  kubernetes-worker:
    charm: cs:~containers/kubernetes-worker-550
    expose: true
    num_units: 1
    options:
      channel: 1.14/stable
      docker_runtime: 'custom'
      docker_runtime_repo: 'deb [arch={ARCH}] https://download.docker.com/linux/ubuntu {CODE} stable'
      docker_runtime_key_url: 'https://download.docker.com/linux/ubuntu/gpg'
      docker_runtime_package: 'docker-ce'
    to:
    - '0'

relations:

# contrail-kubernetes
- [ contrail-kubernetes-node:cni, kubernetes-master:cni ]
- [ contrail-kubernetes-node:cni, kubernetes-worker:cni ]
- [ contrail-kubernetes-master:kube-api-endpoint, kubernetes-master:kube-api-endpoint ]
- [ contrail-kubernetes-master:contrail-kubernetes-config, contrail-kubernetes-node:contrail-kubernetes-config ]

# kubernetes
- [ kubernetes-master:kube-api-endpoint, kubernetes-worker:kube-api-endpoint ]
- [ kubernetes-master:kube-control, kubernetes-worker:kube-control ]
- [ kubernetes-master:certificates, easyrsa:client ]
- [ kubernetes-master:etcd, etcd:db ]
- [ kubernetes-worker:certificates, easyrsa:client ]
- [ etcd:certificates, easyrsa:client ]

machines:
  "0":
    series: bionic
    constraints: mem=4G cores=1 root-disk=10G
  "1":
    series: bionic
    constraints: mem=1G cores=1 root-disk=10G
